"use strict";(self.webpackChunkdisplay_advertising_docs=self.webpackChunkdisplay_advertising_docs||[]).push([[648],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=d(n),u=a,h=m["".concat(l,".").concat(u)]||m[u]||p[u]||i;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7808:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:9},l="Ads Recorder",d={unversionedId:"guides/recorder",id:"guides/recorder",title:"Ads Recorder",description:"The Display Ads Recorder is a command line tool meant to record display ads and output these to separate formats, like",source:"@site/docs/guides/recorder.md",sourceDirName:"guides",slug:"/guides/recorder",permalink:"/display-advertising-docs/docs/guides/recorder",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/recorder.md",tags:[],version:"current",lastUpdatedAt:1678454682,formattedLastUpdatedAt:"3/10/2023",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Multiple Timelines",permalink:"/display-advertising-docs/docs/guides/multiple-timelines"},next:{title:"Dynamic Creative Optimization",permalink:"/display-advertising-docs/docs/guides/dco"}},c={},p=[{value:"Requirements",id:"requirements",level:3},{value:"Installation",id:"installation",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Usage",id:"usage",level:3}],m={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ads-recorder"},"Ads Recorder"),(0,i.kt)("p",null,"The Display Ads Recorder is a command line tool meant to record display ads and output these to separate formats, like\nvideo, jpg and gif (animated)."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Make sure you import and include the enableAdsRecorder(timeline, config) function from display temple (**v6.2.3")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"or higher**) so the ad can dispatch the right events to the recorder tool. See example\nhere: ",(0,i.kt)("a",{parentName:"p",href:"http://www.github.com/mirkovw/display-record-template"},"http://www.github.com/mirkovw/display-record-template")))),(0,i.kt)("h3",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"You must ",(0,i.kt)("strong",{parentName:"p"},"pre-build the ads")," (display-ads-recorder will ask you for the directory where it will search for the ads),\nsee @mediamonks/display-dev-server. Your ad's index.html must include a ",(0,i.kt)("inlineCode",{parentName:"p"},"<meta name='ad.size'>")," tag. otherwise,\ndisplay-ads-recorder will not recognize it as a ad."),(0,i.kt)("p",null,"The ad must include the function that dispatches and listens to critical events for display-ads-recorder to work. See\nexample here: ",(0,i.kt)("a",{parentName:"p",href:"http://www.github.com/mirkovw/display-record-template"},"http://www.github.com/mirkovw/display-record-template"),"."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"npm i @mediamonks/display-ads-recorder\n")),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json" {4}',title:'"package.json"',"{4}":!0},'"scripts": {\n    "dev": "dds --mode development",\n    "build": "dds --mode production",\n    "recorder": "display-ads-recorder",\n    "preview": "display-upload"\n  },\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/shared/script/Banner.js" {1,4}',title:'"/src/shared/script/Banner.js"',"{1,4}":!0},"import enableAdsRecorder from '@mediamonks/display-temple/util/enableRecorder';\n\nstart()\n{\n    enableAdsRecorder(this.animation.getTimeline(), this.config);\n    this.animation.play();\n}\n")),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"npm run recorder\n")),(0,i.kt)("p",null,"After running the script, you will need to answer a few questions before generating the files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Welcome to the Display.Monks Record Tool v3.1.0\nmake sure you import and include the enableAdsRecorder(timeline, config) function from display temple\nso the ad can dispatch the right events to the recorder tool\nsee example here: http://www.github.com/mirkovw/display-record-template\n? Target Dir? (./build)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"? Please select ad(s) to record: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n>( ) all\n ( ) ./build/version1_cashback_v2_image_160x600/index.html\n ( ) ./build/version1_cashback_v2_image_300x250/index.html\n ( ) ./build/version1_cashback_v2_image_300x600/index.html\n ( ) ./build/version1_cashback_v2_image_320x50/index.html\n ( ) ./build/version1_cashback_v2_image_728x90/index.html\n ( ) ./build/version1_cashback_v2_text_160x600/index.html\n(Move up and down to reveal more choices)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"? Please select output(s) (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n>( ) mp4\n ( ) gif (animated)\n ( ) jpg (last frame)\n")),(0,i.kt)("p",null,"NEW* If you select the option ",(0,i.kt)("inlineCode",{parentName:"p"},"jpg (last frame)")," it will also ask you for the max KB filesize."),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Ad Recorder records only one GSAP timeline, therefore, your animation needs to exist out of ",(0,i.kt)("strong",{parentName:"li"},"one main GSAP timeline"),"\nthat includes all the animations."),(0,i.kt)("li",{parentName:"ul"},"Recording video from an ad is not supported.\n:::")))))}u.isMDXComponent=!0}}]);