"use strict";(self.webpackChunkdisplay_advertising_docs=self.webpackChunkdisplay_advertising_docs||[]).push([[648],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=a,f=m["".concat(d,".").concat(u)]||m[u]||p[u]||i;return n?r.createElement(f,o(o({ref:t},c),{},{components:n})):r.createElement(f,o({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7808:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:9},d="Ads Recorder",l={unversionedId:"guides/recorder",id:"guides/recorder",title:"Ads Recorder",description:"The Display Ads Recorder is a command line tool meant to record display ads and output these to separate formats, like video, jpg and gif (animated).",source:"@site/docs/guides/recorder.md",sourceDirName:"guides",slug:"/guides/recorder",permalink:"/display-advertising-docs/docs/guides/recorder",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/recorder.md",tags:[],version:"current",lastUpdatedAt:1657280318,formattedLastUpdatedAt:"7/8/2022",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Multiple Timelines",permalink:"/display-advertising-docs/docs/guides/multiple-timelines"},next:{title:"Dynamic Creative Optimization",permalink:"/display-advertising-docs/docs/guides/dco"}},c={},p=[{value:"Requirements",id:"requirements",level:3},{value:"Installation",id:"installation",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Usage",id:"usage",level:3}],m={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ads-recorder"},"Ads Recorder"),(0,i.kt)("p",null,"The Display Ads Recorder is a command line tool meant to record display ads and output these to separate formats, like video, jpg and gif (animated)."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Make sure you import and include the enableAdsRecorder(timeline, config) function from display temple (",(0,i.kt)("strong",{parentName:"p"},"v6.2.3 or higher"),") so the ad can dispatch the right events to the recorder tool. See example here: ",(0,i.kt)("a",{parentName:"p",href:"http://www.github.com/mirkovw/display-record-template"},"http://www.github.com/mirkovw/display-record-template")))),(0,i.kt)("h3",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"You must ",(0,i.kt)("strong",{parentName:"p"},"pre-build the ads")," (display-ads-recorder will ask you for the directory where it will search for the ads), see @mediamonks/display-dev-server.\nYour ad's index.html must include a ",(0,i.kt)("inlineCode",{parentName:"p"},"<meta name='ad.size'>")," tag. otherwise, display-ads-recorder will not recognize it as a ad."),(0,i.kt)("p",null,"The ad must include the function that dispatches and listens to critical events for display-ads-recorder to work. See example here: ",(0,i.kt)("a",{parentName:"p",href:"http://www.github.com/mirkovw/display-record-template"},"http://www.github.com/mirkovw/display-record-template"),"."),(0,i.kt)("h3",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"npm i @mediamonks/display-ads-recorder\n")),(0,i.kt)("h3",{id:"configuration"},"Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json" {4}',title:'"package.json"',"{4}":!0},'"scripts": {\n    "dev": "dds --mode development",\n    "build": "dds --mode production",\n    "recorder": "display-ads-recorder",\n    "preview": "display-upload"\n  },\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="/src/shared/script/Banner.js" {1,4}',title:'"/src/shared/script/Banner.js"',"{1,4}":!0},"import enableAdsRecorder from '@mediamonks/display-temple/util/enableRecorder';\n\nstart() {\n    enableAdsRecorder(this.animation.getTimeline(), this.config);\n    this.animation.play();\n}\n")),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"npm run recorder\n")),(0,i.kt)("p",null,"After running the script, you will need to answer a few questions before generating the files:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Welcome to the Display.Monks Record Tool v1.0.4\n\n? Target Dir? ./build\nfinding all index.html files recursively in ./build\nfound 2 ad(s)\n? Please select ad(s) to record: all\n? Please select additional output types (mp4 is done by default): gif (animated)\n? You selected .gif as additional output. Would you like it run once or loop? Run once\n? Please select fps to record at 30\n")),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Ad Recorder records only one GSAP timeline, therefore, your animation needs to exist out of one main GSAP timeline that includes all the animations."),(0,i.kt)("li",{parentName:"ul"},"Recording video from an ad is not supported.")))))}u.isMDXComponent=!0}}]);