"use strict";(self.webpackChunkdisplay_advertising_docs=self.webpackChunkdisplay_advertising_docs||[]).push([[369],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(h,l(l({ref:t},c),{},{components:n})):r.createElement(h,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4438:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:2},s="Creating a new project",p={unversionedId:"getting-started/creating-a-new-project",id:"getting-started/creating-a-new-project",title:"Creating a new project",description:"Its advisable when creating a new richmedia unit to first scaffold the initial project This will save you a lot of",source:"@site/docs/getting-started/creating-a-new-project.md",sourceDirName:"getting-started",slug:"/getting-started/creating-a-new-project",permalink:"/display-advertising-docs/docs/getting-started/creating-a-new-project",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/creating-a-new-project.md",tags:[],version:"current",lastUpdatedAt:1654263356,formattedLastUpdatedAt:"6/3/2022",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/display-advertising-docs/docs/getting-started/installation"},next:{title:"Start the server",permalink:"/display-advertising-docs/docs/getting-started/start-the-server"}},c={},d=[{value:"Step 1",id:"step-1",level:3},{value:"Step 2",id:"step-2",level:3},{value:"Step 3",id:"step-3",level:3},{value:"Step 4",id:"step-4",level:3}],u={toc:d};function m(e){var t=e.components,o=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"creating-a-new-project"},"Creating a new project"),(0,i.kt)("p",null,"Its advisable when creating a new richmedia unit to first scaffold the initial project This will save you a lot of\ntime and effort. Generate (scaffold) a new banner project. This will generate all the necessary files and folder structure you need for\nthe project."),(0,i.kt)("h3",{id:"step-1"},"Step 1"),(0,i.kt)("p",null,"In the terminal, make your way to a new project folder of your choosing, e.g. ",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"documents/work/my-banner-project")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"yo display-boilerplate\n")),(0,i.kt)("p",null,"In this menu you can use the arrow keys to navigate the cursor."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"? What do you want to do? \n  Create quick unit (with default parameters) \n\u276f Create display units (you can create multiple or just one) \n")),(0,i.kt)("h3",{id:"step-2"},"Step 2"),(0,i.kt)("p",null,"We\u2019re just going to create a banner using the second option in this guide, hit ",(0,i.kt)("inlineCode",{parentName:"p"},"Enter")," to select."),(0,i.kt)("p",null,"Enter the name of the project or just hit enter to use the default, which is the folder name."),(0,i.kt)("h3",{id:"step-3"},"Step 3"),(0,i.kt)("p",null,"Select the first unit you would like the generator to create. Use the arrow keys to navigate and hit ",(0,i.kt)("inlineCode",{parentName:"p"},"Enter"),"\nwhen ready."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Creating banner\n? Please select a set for your unit: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n \u25ef 160x600\n \u25ef 300x50\n\u276f\u25c9 300x250\n \u25ef 300x600\n \u25ef 320x50\n \u25ef 320x240\n \u25ef 320x480\n(Move up and down to reveal more choices)\n")),(0,i.kt)("p",null,"Enter the directory where you wish the source files to be placed. Just hit enter to use the default, which is something\nlike ",(0,i.kt)("inlineCode",{parentName:"p"},"./src/{size}x{width}")),(0,i.kt)("p",null,"Select the type of banner:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"? Please select a type you want: (Use arrow keys)\n\u276f plain \n  doubleclick \n  flashtalking \n")),(0,i.kt)("p",null,"Then you will have to answer which units you want to have their own html. You will need to answer the same with the ",(0,i.kt)("inlineCode",{parentName:"p"},"CSS")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"JS"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"? Please select a set for your unit: 300x250\n? Please select a type you want: plain\n? Where do you want to put it? ./src/plain/\n? Please select display unit with separate html: 300x250\n? Please select display unit with separate javascript: 300x250\n? Please select display unit with separate css: (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n\u276f\u25c9 300x250\n")),(0,i.kt)("h3",{id:"step-4"},"Step 4"),(0,i.kt)("p",null,"The generator will generate the basic template files and install the according node modules as well. This process will take a minute. When it\u2019s done, you\u2019ll end up with a directory looking something like this:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Filename"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"node_modules"),(0,i.kt)("td",{parentName:"tr",align:null},"all the packages / libraries your project")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/300x250/","[.richmediarc]"),(0,i.kt)("td",{parentName:"tr",align:null},"The configuration file for the ",(0,i.kt)("inlineCode",{parentName:"td"},"richmedia-temple-server"),", This file is used so that the ",(0,i.kt)("inlineCode",{parentName:"td"},"richmedia-temple-server")," knows what directories are richmedia units.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/shared/script/main.js"),(0,i.kt)("td",{parentName:"tr",align:null},"Javascript File this is referenced by the ",(0,i.kt)("inlineCode",{parentName:"td"},".richmediarc")," file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/shared/script/Animation.js"),(0,i.kt)("td",{parentName:"tr",align:null},"The animation javascript code.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/shared/script/Banner.js"),(0,i.kt)("td",{parentName:"tr",align:null},"The banner javascript code.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/shared/css/style.css"),(0,i.kt)("td",{parentName:"tr",align:null},"Main ",(0,i.kt)("inlineCode",{parentName:"td"},"CSS")," file, this file is referenced by the ",(0,i.kt)("inlineCode",{parentName:"td"},".richmediarc")," file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"src/shared/index.hbs"),(0,i.kt)("td",{parentName:"tr",align:null},"Main ",(0,i.kt)("inlineCode",{parentName:"td"},"HTML")," (with handlebars) file, this file is referenced by the ",(0,i.kt)("inlineCode",{parentName:"td"},".richmediarc")," file.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},".editorconfig"),(0,i.kt)("td",{parentName:"tr",align:null},"configuration file for you editor. So everyone atleasts uses the same basic settings.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},".gitignore"),(0,i.kt)("td",{parentName:"tr",align:null},"configuration file used by git so it knows which files to ignore.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},".prettierrc"),(0,i.kt)("td",{parentName:"tr",align:null},"A configuration file for prettier printer")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"[package.json]"),(0,i.kt)("td",{parentName:"tr",align:null},"A configuration file for NPM / YARN, one of the most important files in your project.")))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"SannerStructure",src:n(8543).Z,width:"457",height:"643"})))}m.isMDXComponent=!0},8543:function(e,t,n){t.Z=n.p+"assets/images/banner_structure-29e41476e45834c7856f4f77b4b10d6e.jpeg"}}]);